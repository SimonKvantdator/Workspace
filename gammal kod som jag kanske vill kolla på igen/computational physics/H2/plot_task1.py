import numpy as np
import matplotlib as mpl
from matplotlib import pyplot as plt
import struct

### for plotting nice plots ###
width = 6
height = width / 1.5
fsize = 16
font = {'size': fsize}
mpl.rc('font', **font)
mpl.rc('xtick', labelsize=fsize)
mpl.rc('ytick', labelsize=fsize)
mpl.rc('text', usetex=False)

def rho_from_central_approx(r, Z=2):
    return Z**3 * 4 * r**2 * np.exp(-2 * Z * r)

### read binary files generated by C ###
E_local_list = np.fromfile("E_local_list_task1.bin")
psi_list = np.fromfile("psi_list_task1.bin")
r1_list = np.fromfile("r1_list_task1.bin")
r2_list = np.fromfile("r2_list_task1.bin")
theta_list = np.fromfile("theta_list_task1.bin")
parameters = np.fromfile("parameters_task1.bin") # {alpha, Delta, nbr_samples, nbr_walkers}

### extract parameters ###
alpha = parameters[0]
Delta = parameters[1]

### plot radii ###
fig, ax = plt.subplots(figsize=(8,4))
r_list = np.concatenate((r1_list, r2_list))
ax.hist(r_list, density=True, bins=50, color='C0', label=r'$r_1$ & $r_2$ distribution')
r = np.linspace(0, max(r1_list), num=1e3)
ax.plot(r, rho_from_central_approx(r, Z=2), color='C1', label=r'$\rho(r)$ from central approximation, $Z=2$')
ax.plot(r, rho_from_central_approx(r, Z=27/16), color='C1', linestyle='--', label=r'$\rho(r)$ from central approximation, $Z=\frac{27}{16}$')
ax.set_xlabel(r'$r$ [a.u.]')
ax.set_ylabel(r'$p(r)$')

### legend & save file ###
plt.legend()
plt.tight_layout()
filename = f'plot_radius_task1.pdf'
plt.savefig(filename)
plt.show()

### plot angles ###
fig, (ax1, ax2) = plt.subplots(nrows=1, ncols=2, figsize=(8,4))
ax1.hist(theta_list, density=True, bins=25, color='C0', label=r'$\theta$ distribution')
th = np.linspace(0, np.pi, 1e3)
ax1.plot(th, np.sin(th) / 2, color='C1', label=r'$\frac{1}{2} \sin{\theta}$')
ax1.set_xticks([0, np.pi / 4, 2 * np.pi / 4, 3 * np.pi / 4, np.pi])
ax1.set_xticklabels([r'0', r'$\frac{\pi}{4}$', r'$\frac{\pi}{2}$', r'$\frac{3 \pi}{4}$', r'$\pi$'])
ax1.set_xlabel(r'$\theta$')
ax1.set_ylabel(r'$p(\theta)$')
ax2.plot(np.cos(th), 1 / 2 * np.ones(th.shape), color='C1', label=r'$\frac{1}{2}$')
ax2.hist(np.cos(theta_list), density=True, bins=25, color='C0', label=r'$\theta$ distribution')
ax2.set_xlabel(r'$\cos{\theta}$')
ax2.set_ylabel(r'$p(\cos{\theta})$')

### legend & save file ###
ax1.legend()
ax2.legend()
plt.tight_layout()
filename = f'plot_theta_task1.pdf'
plt.savefig(filename)
plt.show()