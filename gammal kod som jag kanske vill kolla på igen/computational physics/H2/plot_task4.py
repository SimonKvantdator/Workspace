import numpy as np
import matplotlib as mpl
from matplotlib import pyplot as plt
import struct

### for plotting nice plots ###
width = 6
height = width / 1.5
fsize = 16
font = {'size': fsize}
mpl.rc('font', **font)
mpl.rc('xtick', labelsize=fsize)
mpl.rc('ytick', labelsize=fsize)
mpl.rc('text', usetex=False)

### read binary files generated by C ###
alphas = np.fromfile("alphas_task4.bin")
parameters = np.fromfile("parameters_task4.bin") # {nbr_iterations, nbr_walkers, nbr_samples}
alpha_min_from_task3 = 0.145959 
sigma_alpha_from_task3 = 0.000456

### extract parameters ###
nbr_iterations = int(parameters[0])
nbr_walkers = int(parameters[1])
alphas_indices = np.array([i + 1 for i in range(nbr_iterations)])
print(f'nbr_alphas  = {nbr_iterations}')
print(f'nbr_walkers = {nbr_walkers}')


### plot alpha ###
fig, ax = plt.subplots(figsize=(8,4))
ax.hlines(alpha_min_from_task3, 1, nbr_iterations, color='C1',
                                    linestyle='--',
                                    label=r'$\alpha_\mathrm{min}$ from task 3')
ax.fill_between(alphas_indices,
                (alpha_min_from_task3 + 2 * sigma_alpha_from_task3) * np.ones(alphas_indices.shape),
                (alpha_min_from_task3 - 2 * sigma_alpha_from_task3) * np.ones(alphas_indices.shape),
                color='C1',
                alpha=0.4,
                label=r'$\pm 2\sigma$') # error bands
ax.plot(alphas_indices, alphas[0 * nbr_iterations:(0 + 1) * nbr_iterations], color='C0',
                    label=r'$\alpha$')
for i in range(1, nbr_walkers):
    ax.plot(alphas_indices, alphas[i * nbr_iterations:(i + 1) * nbr_iterations], color='C0')
    print(np.mean(alphas[int((i + 0.9) * nbr_iterations):(i + 1) * nbr_iterations])) # print average of last 10% of alphas for each walker
ax.set_xscale('log')
ax.set_xlabel(r'iteration')
ax.set_ylabel(r'$\alpha$ [a.u.]')

### legend & save file ###
plt.legend()
plt.tight_layout()
filename = f'plot_task4.pdf'
plt.savefig(filename)
plt.show()