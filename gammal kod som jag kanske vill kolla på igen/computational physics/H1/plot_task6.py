import numpy as np
import matplotlib as mpl
from matplotlib import pyplot as plt
import struct

### for plotting nice plots ###
width = 6
height = width / 1.5
fsize = 16
font = {'size': fsize}
mpl.rc('font', **font)
mpl.rc('xtick', labelsize=fsize)
mpl.rc('ytick', labelsize=fsize)
mpl.rc('text', usetex=False)

### read binary files generated by C ###
velocity_correlations = np.fromfile('velocity_correlations_task6.bin')
parameters = np.fromfile('parameters_task6.bin')

### extract parameters ###
dt = parameters[0]
nbr_timesteps = int(parameters[1])
t = np.array([i * dt for i in range(nbr_timesteps)])

### plot velocity_correlations(t) ###
fig, ax = plt.subplots()
ax.plot(t, velocity_correlations * 70 / max(velocity_correlations), label=r'velocity correlation')
ax.set_xlabel(r'$t$ [ps]')
ax.set_ylabel(r'[A$^2$ / ps$^2$]')

### legend & save file ###
plt.legend()
plt.tight_layout()
filename = f'plot_task6_solid.pdf'
plt.savefig(filename)
plt.show()

### calculate cosine transform ###
D = np.trapz(velocity_correlations, x=t) / 3
print(f'D = {D} []')

